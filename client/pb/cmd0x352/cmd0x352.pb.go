// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: cmd0x352.proto

package cmd0x352

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subcmd      *uint32            `protobuf:"varint,1,opt,name=subcmd" json:"subcmd,omitempty"`
	TryupImgReq []*D352TryUpImgReq `protobuf:"bytes,2,rep,name=tryupImgReq" json:"tryupImgReq,omitempty"`
	// repeated GetImgUrlReq getimgUrlReq = 3;
	// repeated DelImgReq delImgReq = 4;
	NetType *uint32 `protobuf:"varint,10,opt,name=netType" json:"netType,omitempty"`
}

func (x *ReqBody) Reset() {
	*x = ReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd0x352_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBody) ProtoMessage() {}

func (x *ReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_cmd0x352_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBody.ProtoReflect.Descriptor instead.
func (*ReqBody) Descriptor() ([]byte, []int) {
	return file_cmd0x352_proto_rawDescGZIP(), []int{0}
}

func (x *ReqBody) GetSubcmd() uint32 {
	if x != nil && x.Subcmd != nil {
		return *x.Subcmd
	}
	return 0
}

func (x *ReqBody) GetTryupImgReq() []*D352TryUpImgReq {
	if x != nil {
		return x.TryupImgReq
	}
	return nil
}

func (x *ReqBody) GetNetType() uint32 {
	if x != nil && x.NetType != nil {
		return *x.NetType
	}
	return 0
}

type RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subcmd      *uint32        `protobuf:"varint,1,opt,name=subcmd" json:"subcmd,omitempty"`
	TryupImgRsp []*TryUpImgRsp `protobuf:"bytes,2,rep,name=tryupImgRsp" json:"tryupImgRsp,omitempty"`
	// repeated GetImgUrlRsp getimgUrlRsp = 3;
	NewBigchan *bool `protobuf:"varint,4,opt,name=newBigchan" json:"newBigchan,omitempty"`
	// repeated DelImgRsp delImgRsp = 5;
	FailMsg []byte `protobuf:"bytes,10,opt,name=failMsg" json:"failMsg,omitempty"`
}

func (x *RspBody) Reset() {
	*x = RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd0x352_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspBody) ProtoMessage() {}

func (x *RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_cmd0x352_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspBody.ProtoReflect.Descriptor instead.
func (*RspBody) Descriptor() ([]byte, []int) {
	return file_cmd0x352_proto_rawDescGZIP(), []int{1}
}

func (x *RspBody) GetSubcmd() uint32 {
	if x != nil && x.Subcmd != nil {
		return *x.Subcmd
	}
	return 0
}

func (x *RspBody) GetTryupImgRsp() []*TryUpImgRsp {
	if x != nil {
		return x.TryupImgRsp
	}
	return nil
}

func (x *RspBody) GetNewBigchan() bool {
	if x != nil && x.NewBigchan != nil {
		return *x.NewBigchan
	}
	return false
}

func (x *RspBody) GetFailMsg() []byte {
	if x != nil {
		return x.FailMsg
	}
	return nil
}

type D352TryUpImgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcUin        *uint64 `protobuf:"varint,1,opt,name=srcUin" json:"srcUin,omitempty"`
	DstUin        *uint64 `protobuf:"varint,2,opt,name=dstUin" json:"dstUin,omitempty"`
	FileId        *uint64 `protobuf:"varint,3,opt,name=fileId" json:"fileId,omitempty"`
	FileMd5       []byte  `protobuf:"bytes,4,opt,name=fileMd5" json:"fileMd5,omitempty"`
	FileSize      *uint64 `protobuf:"varint,5,opt,name=fileSize" json:"fileSize,omitempty"`
	FileName      []byte  `protobuf:"bytes,6,opt,name=fileName" json:"fileName,omitempty"`
	SrcTerm       *uint32 `protobuf:"varint,7,opt,name=srcTerm" json:"srcTerm,omitempty"`
	PlatformType  *uint32 `protobuf:"varint,8,opt,name=platformType" json:"platformType,omitempty"`
	InnerIp       *uint32 `protobuf:"varint,9,opt,name=innerIp" json:"innerIp,omitempty"`
	AddressBook   *bool   `protobuf:"varint,10,opt,name=addressBook" json:"addressBook,omitempty"`
	Retry         *uint32 `protobuf:"varint,11,opt,name=retry" json:"retry,omitempty"`
	BuType        *uint32 `protobuf:"varint,12,opt,name=buType" json:"buType,omitempty"`
	PicOriginal   *bool   `protobuf:"varint,13,opt,name=picOriginal" json:"picOriginal,omitempty"`
	PicWidth      *uint32 `protobuf:"varint,14,opt,name=picWidth" json:"picWidth,omitempty"`
	PicHeight     *uint32 `protobuf:"varint,15,opt,name=picHeight" json:"picHeight,omitempty"`
	PicType       *uint32 `protobuf:"varint,16,opt,name=picType" json:"picType,omitempty"`
	BuildVer      []byte  `protobuf:"bytes,17,opt,name=buildVer" json:"buildVer,omitempty"`
	FileIndex     []byte  `protobuf:"bytes,18,opt,name=fileIndex" json:"fileIndex,omitempty"`
	StoreDays     *uint32 `protobuf:"varint,19,opt,name=storeDays" json:"storeDays,omitempty"`
	TryupStepflag *uint32 `protobuf:"varint,20,opt,name=tryupStepflag" json:"tryupStepflag,omitempty"`
	RejectTryfast *bool   `protobuf:"varint,21,opt,name=rejectTryfast" json:"rejectTryfast,omitempty"`
	SrvUpload     *uint32 `protobuf:"varint,22,opt,name=srvUpload" json:"srvUpload,omitempty"`
	TransferUrl   []byte  `protobuf:"bytes,23,opt,name=transferUrl" json:"transferUrl,omitempty"`
}

func (x *D352TryUpImgReq) Reset() {
	*x = D352TryUpImgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd0x352_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D352TryUpImgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D352TryUpImgReq) ProtoMessage() {}

func (x *D352TryUpImgReq) ProtoReflect() protoreflect.Message {
	mi := &file_cmd0x352_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D352TryUpImgReq.ProtoReflect.Descriptor instead.
func (*D352TryUpImgReq) Descriptor() ([]byte, []int) {
	return file_cmd0x352_proto_rawDescGZIP(), []int{2}
}

func (x *D352TryUpImgReq) GetSrcUin() uint64 {
	if x != nil && x.SrcUin != nil {
		return *x.SrcUin
	}
	return 0
}

func (x *D352TryUpImgReq) GetDstUin() uint64 {
	if x != nil && x.DstUin != nil {
		return *x.DstUin
	}
	return 0
}

func (x *D352TryUpImgReq) GetFileId() uint64 {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return 0
}

func (x *D352TryUpImgReq) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *D352TryUpImgReq) GetFileSize() uint64 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

func (x *D352TryUpImgReq) GetFileName() []byte {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *D352TryUpImgReq) GetSrcTerm() uint32 {
	if x != nil && x.SrcTerm != nil {
		return *x.SrcTerm
	}
	return 0
}

func (x *D352TryUpImgReq) GetPlatformType() uint32 {
	if x != nil && x.PlatformType != nil {
		return *x.PlatformType
	}
	return 0
}

func (x *D352TryUpImgReq) GetInnerIp() uint32 {
	if x != nil && x.InnerIp != nil {
		return *x.InnerIp
	}
	return 0
}

func (x *D352TryUpImgReq) GetAddressBook() bool {
	if x != nil && x.AddressBook != nil {
		return *x.AddressBook
	}
	return false
}

func (x *D352TryUpImgReq) GetRetry() uint32 {
	if x != nil && x.Retry != nil {
		return *x.Retry
	}
	return 0
}

func (x *D352TryUpImgReq) GetBuType() uint32 {
	if x != nil && x.BuType != nil {
		return *x.BuType
	}
	return 0
}

func (x *D352TryUpImgReq) GetPicOriginal() bool {
	if x != nil && x.PicOriginal != nil {
		return *x.PicOriginal
	}
	return false
}

func (x *D352TryUpImgReq) GetPicWidth() uint32 {
	if x != nil && x.PicWidth != nil {
		return *x.PicWidth
	}
	return 0
}

func (x *D352TryUpImgReq) GetPicHeight() uint32 {
	if x != nil && x.PicHeight != nil {
		return *x.PicHeight
	}
	return 0
}

func (x *D352TryUpImgReq) GetPicType() uint32 {
	if x != nil && x.PicType != nil {
		return *x.PicType
	}
	return 0
}

func (x *D352TryUpImgReq) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *D352TryUpImgReq) GetFileIndex() []byte {
	if x != nil {
		return x.FileIndex
	}
	return nil
}

func (x *D352TryUpImgReq) GetStoreDays() uint32 {
	if x != nil && x.StoreDays != nil {
		return *x.StoreDays
	}
	return 0
}

func (x *D352TryUpImgReq) GetTryupStepflag() uint32 {
	if x != nil && x.TryupStepflag != nil {
		return *x.TryupStepflag
	}
	return 0
}

func (x *D352TryUpImgReq) GetRejectTryfast() bool {
	if x != nil && x.RejectTryfast != nil {
		return *x.RejectTryfast
	}
	return false
}

func (x *D352TryUpImgReq) GetSrvUpload() uint32 {
	if x != nil && x.SrvUpload != nil {
		return *x.SrvUpload
	}
	return 0
}

func (x *D352TryUpImgReq) GetTransferUrl() []byte {
	if x != nil {
		return x.TransferUrl
	}
	return nil
}

type TryUpImgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId   *uint64 `protobuf:"varint,1,opt,name=fileId" json:"fileId,omitempty"`
	ClientIp *uint32 `protobuf:"varint,2,opt,name=clientIp" json:"clientIp,omitempty"`
	Result   *uint32 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	FailMsg  []byte  `protobuf:"bytes,4,opt,name=failMsg" json:"failMsg,omitempty"`
	FileExit *bool   `protobuf:"varint,5,opt,name=fileExit" json:"fileExit,omitempty"`
	// optional ImgInfo imgInfo = 6;
	UpIp         []uint32 `protobuf:"varint,7,rep,name=upIp" json:"upIp,omitempty"`
	UpPort       []uint32 `protobuf:"varint,8,rep,name=upPort" json:"upPort,omitempty"`
	UpUkey       []byte   `protobuf:"bytes,9,opt,name=upUkey" json:"upUkey,omitempty"`
	UpResid      []byte   `protobuf:"bytes,10,opt,name=upResid" json:"upResid,omitempty"`
	UpUuid       []byte   `protobuf:"bytes,11,opt,name=upUuid" json:"upUuid,omitempty"`
	UpOffset     *uint64  `protobuf:"varint,12,opt,name=upOffset" json:"upOffset,omitempty"`
	BlockSize    *uint64  `protobuf:"varint,13,opt,name=blockSize" json:"blockSize,omitempty"`
	EncryptDstip []byte   `protobuf:"bytes,14,opt,name=encryptDstip" json:"encryptDstip,omitempty"`
	Roamdays     *uint32  `protobuf:"varint,15,opt,name=roamdays" json:"roamdays,omitempty"`
	// repeated IPv6Info upIp6 = 26;
	ClientIp6        []byte  `protobuf:"bytes,27,opt,name=clientIp6" json:"clientIp6,omitempty"`
	ThumbDownPara    []byte  `protobuf:"bytes,60,opt,name=thumbDownPara" json:"thumbDownPara,omitempty"`
	OriginalDownPara []byte  `protobuf:"bytes,61,opt,name=originalDownPara" json:"originalDownPara,omitempty"`
	DownDomain       []byte  `protobuf:"bytes,62,opt,name=downDomain" json:"downDomain,omitempty"`
	BigDownPara      []byte  `protobuf:"bytes,64,opt,name=bigDownPara" json:"bigDownPara,omitempty"`
	BigThumbDownPara []byte  `protobuf:"bytes,65,opt,name=bigThumbDownPara" json:"bigThumbDownPara,omitempty"`
	HttpsUrlFlag     *uint32 `protobuf:"varint,66,opt,name=httpsUrlFlag" json:"httpsUrlFlag,omitempty"` // optional TryUpInfo4Busi info4Busi = 1001;
}

func (x *TryUpImgRsp) Reset() {
	*x = TryUpImgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd0x352_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TryUpImgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryUpImgRsp) ProtoMessage() {}

func (x *TryUpImgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd0x352_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryUpImgRsp.ProtoReflect.Descriptor instead.
func (*TryUpImgRsp) Descriptor() ([]byte, []int) {
	return file_cmd0x352_proto_rawDescGZIP(), []int{3}
}

func (x *TryUpImgRsp) GetFileId() uint64 {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return 0
}

func (x *TryUpImgRsp) GetClientIp() uint32 {
	if x != nil && x.ClientIp != nil {
		return *x.ClientIp
	}
	return 0
}

func (x *TryUpImgRsp) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *TryUpImgRsp) GetFailMsg() []byte {
	if x != nil {
		return x.FailMsg
	}
	return nil
}

func (x *TryUpImgRsp) GetFileExit() bool {
	if x != nil && x.FileExit != nil {
		return *x.FileExit
	}
	return false
}

func (x *TryUpImgRsp) GetUpIp() []uint32 {
	if x != nil {
		return x.UpIp
	}
	return nil
}

func (x *TryUpImgRsp) GetUpPort() []uint32 {
	if x != nil {
		return x.UpPort
	}
	return nil
}

func (x *TryUpImgRsp) GetUpUkey() []byte {
	if x != nil {
		return x.UpUkey
	}
	return nil
}

func (x *TryUpImgRsp) GetUpResid() []byte {
	if x != nil {
		return x.UpResid
	}
	return nil
}

func (x *TryUpImgRsp) GetUpUuid() []byte {
	if x != nil {
		return x.UpUuid
	}
	return nil
}

func (x *TryUpImgRsp) GetUpOffset() uint64 {
	if x != nil && x.UpOffset != nil {
		return *x.UpOffset
	}
	return 0
}

func (x *TryUpImgRsp) GetBlockSize() uint64 {
	if x != nil && x.BlockSize != nil {
		return *x.BlockSize
	}
	return 0
}

func (x *TryUpImgRsp) GetEncryptDstip() []byte {
	if x != nil {
		return x.EncryptDstip
	}
	return nil
}

func (x *TryUpImgRsp) GetRoamdays() uint32 {
	if x != nil && x.Roamdays != nil {
		return *x.Roamdays
	}
	return 0
}

func (x *TryUpImgRsp) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

func (x *TryUpImgRsp) GetThumbDownPara() []byte {
	if x != nil {
		return x.ThumbDownPara
	}
	return nil
}

func (x *TryUpImgRsp) GetOriginalDownPara() []byte {
	if x != nil {
		return x.OriginalDownPara
	}
	return nil
}

func (x *TryUpImgRsp) GetDownDomain() []byte {
	if x != nil {
		return x.DownDomain
	}
	return nil
}

func (x *TryUpImgRsp) GetBigDownPara() []byte {
	if x != nil {
		return x.BigDownPara
	}
	return nil
}

func (x *TryUpImgRsp) GetBigThumbDownPara() []byte {
	if x != nil {
		return x.BigThumbDownPara
	}
	return nil
}

func (x *TryUpImgRsp) GetHttpsUrlFlag() uint32 {
	if x != nil && x.HttpsUrlFlag != nil {
		return *x.HttpsUrlFlag
	}
	return 0
}

var File_cmd0x352_proto protoreflect.FileDescriptor

var file_cmd0x352_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x35, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x6f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x75, 0x62, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62,
	0x63, 0x6d, 0x64, 0x12, 0x32, 0x0a, 0x0b, 0x74, 0x72, 0x79, 0x75, 0x70, 0x49, 0x6d, 0x67, 0x52,
	0x65, 0x71, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x33, 0x35, 0x32, 0x54,
	0x72, 0x79, 0x55, 0x70, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x71, 0x52, 0x0b, 0x74, 0x72, 0x79, 0x75,
	0x70, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x8b, 0x01, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x75, 0x62, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x75, 0x62, 0x63, 0x6d, 0x64, 0x12, 0x2e, 0x0a, 0x0b, 0x74, 0x72, 0x79, 0x75, 0x70, 0x49, 0x6d,
	0x67, 0x52, 0x73, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x79,
	0x55, 0x70, 0x49, 0x6d, 0x67, 0x52, 0x73, 0x70, 0x52, 0x0b, 0x74, 0x72, 0x79, 0x75, 0x70, 0x49,
	0x6d, 0x67, 0x52, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x69, 0x67, 0x63,
	0x68, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x69,
	0x67, 0x63, 0x68, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x22,
	0xad, 0x05, 0x0a, 0x0f, 0x44, 0x33, 0x35, 0x32, 0x54, 0x72, 0x79, 0x55, 0x70, 0x49, 0x6d, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x73, 0x74, 0x55, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x73, 0x74,
	0x55, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x72, 0x63, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x72, 0x63, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62,
	0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x69, 0x63, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x69, 0x63, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x69, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61,
	0x79, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x61, 0x79, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x79, 0x75, 0x70, 0x53, 0x74, 0x65, 0x70,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x79, 0x75,
	0x70, 0x53, 0x74, 0x65, 0x70, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x72, 0x79, 0x66, 0x61, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x79, 0x66, 0x61, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x72, 0x76, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x72, 0x76, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x22,
	0x81, 0x05, 0x0a, 0x0b, 0x54, 0x72, 0x79, 0x55, 0x70, 0x49, 0x6d, 0x67, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x61,
	0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x70, 0x49, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x04, 0x75, 0x70, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x70, 0x55, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75,
	0x70, 0x55, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x52, 0x65, 0x73, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x75, 0x70, 0x52, 0x65, 0x73, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x70, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x44, 0x73, 0x74, 0x69,
	0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x44, 0x73, 0x74, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x61, 0x6d, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x61, 0x6d, 0x64, 0x61, 0x79,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x36, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x36, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x3e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x69, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x18, 0x40, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x69, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x69, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x44,
	0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62,
	0x69, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x12,
	0x22, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x55, 0x72, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18,
	0x42, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x55, 0x72, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x63, 0x6d, 0x64, 0x30, 0x78, 0x33,
	0x35, 0x32,
}

var (
	file_cmd0x352_proto_rawDescOnce sync.Once
	file_cmd0x352_proto_rawDescData = file_cmd0x352_proto_rawDesc
)

func file_cmd0x352_proto_rawDescGZIP() []byte {
	file_cmd0x352_proto_rawDescOnce.Do(func() {
		file_cmd0x352_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd0x352_proto_rawDescData)
	})
	return file_cmd0x352_proto_rawDescData
}

var file_cmd0x352_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cmd0x352_proto_goTypes = []interface{}{
	(*ReqBody)(nil),         // 0: ReqBody
	(*RspBody)(nil),         // 1: RspBody
	(*D352TryUpImgReq)(nil), // 2: D352TryUpImgReq
	(*TryUpImgRsp)(nil),     // 3: TryUpImgRsp
}
var file_cmd0x352_proto_depIdxs = []int32{
	2, // 0: ReqBody.tryupImgReq:type_name -> D352TryUpImgReq
	3, // 1: RspBody.tryupImgRsp:type_name -> TryUpImgRsp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cmd0x352_proto_init() }
func file_cmd0x352_proto_init() {
	if File_cmd0x352_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmd0x352_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd0x352_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd0x352_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D352TryUpImgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd0x352_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TryUpImgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd0x352_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd0x352_proto_goTypes,
		DependencyIndexes: file_cmd0x352_proto_depIdxs,
		MessageInfos:      file_cmd0x352_proto_msgTypes,
	}.Build()
	File_cmd0x352_proto = out.File
	file_cmd0x352_proto_rawDesc = nil
	file_cmd0x352_proto_goTypes = nil
	file_cmd0x352_proto_depIdxs = nil
}
